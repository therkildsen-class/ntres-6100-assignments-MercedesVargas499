---
title: "wrangling2"
format: html
---

select()

Sirve para elegir columnas.

No cambia los datos, solo reduce el n√∫mero de columnas.

Ejemplo:

coronavirus |> 
  select(country, cases)


üëâ Te qued√°s con dos columnas (country y cases), pero sigue habiendo una fila por cada fecha/registro.

üîπ group_by()

Sirve para agrupar las filas por una o m√°s variables.

No hace ning√∫n c√°lculo por s√≠ solo, pero prepara el terreno para que funciones como summarise(), mean(), sum(), etc. se apliquen dentro de cada grupo.

Ejemplo:

coronavirus |> 
  group_by(country)


üëâ Ahora R sabe que ‚Äúcada pa√≠s es un grupo‚Äù.

üîπ La combinaci√≥n con summarise()

Cuando vos escrib√≠s:

coronavirus |> 
  filter(type == "death", country %in% c("Canada","US","Mexico")) |>
  group_by(country) |>
  summarise(total_cases = sum(cases, na.rm = TRUE))


group_by(country) ‚Üí junta todas las filas por pa√≠s

summarise(total_cases = sum(cases)) ‚Üí calcula la suma de casos dentro de cada pa√≠s

El resultado es un dataset chiquito con una fila por pa√≠s, y la suma de casos totales.

üëâ Si usaras solo select(country, cases), te quedar√≠as con la lista de casos por fecha y pa√≠s, pero no tendr√≠as la suma total por pa√≠s.
Por eso group_by() + summarise() es lo correcto cuando quer√©s colapsar muchas filas en un valor agregado por grupo (suma, promedio, m√°ximo, etc.).



VACCINATION EXAMPLE

vacc <- read_csv("https://raw.githubusercontent.com/RamiKrispin/coronavirus/main/csv/covid19_vaccine.csv")

vacc|> 
  filter(date==max(date))|>
  select(country_region,continent_name, people_at_least_one_dose,population)|>
  mutate(vaxxrate=people_at_least_one_dose/population,1)|>
  view()
  
  üîπ ¬øQu√© hace mutate() en general?

Crea o modifica columnas en un dataframe.

La sintaxis es:

mutate(nueva_columna = c√°lculo, ...)


El c√°lculo puede usar columnas existentes, n√∫meros, funciones, etc.

üîπ En tu ejemplo:
vacc |> 
  filter(date == max(date)) |> 
  select(country_region, continent_name, people_at_least_one_dose, population) |> 
  mutate(vaxxrate = people_at_least_one_dose / population, 1) |> 
  view()


people_at_least_one_dose / population
‚Üí calcula la proporci√≥n de gente vacunada con al menos una dosis sobre la poblaci√≥n total.

mutate(vaxxrate = ...)
‚Üí crea una nueva columna llamada vaxxrate que contiene ese resultado.

El , 1 que aparece al final en tu c√≥digo parece un error de sintaxis (no deber√≠a estar ah√≠). Probablemente quisiste escribir:

mutate(vaxxrate = people_at_least_one_dose / population)

üîπ Ejemplo chiquito:
df <- tibble(
  pais = c("A", "B"),
  dosis = c(50, 80),
  poblacion = c(100, 200)
)

df |> mutate(vaxxrate = dosis / poblacion)


üëâ Resultado:

pais	dosis	poblacion	vaxxrate
A	50	100	0.50
B	80	200	0.40

Resumiendo:
‚úÖ mutate() te permite agregar variables nuevas calculadas a partir de las existentes (como el % de vacunaci√≥n).


ARRANGE()

El signo - delante de vaxxrate indica que quieres ordenar de mayor a menor.

Si pusieras solo arrange(vaxxrate), se ordenar√≠a de menor a mayor.

Entonces, despu√©s de calcular vaxxrate (la proporci√≥n de personas con al menos una dosis), arrange(-vaxxrate) ordena los pa√≠ses de m√°s vacunados a menos vacunados.

En resumen: arrange() organiza las filas del tibble seg√∫n la(s) columna(s) que le pases.



